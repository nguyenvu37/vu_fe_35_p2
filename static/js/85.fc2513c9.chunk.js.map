{"version":3,"sources":["components/information-customer/infoCustomerList.js","pages/user-page/information-customer/infoCustomer.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","common/constCommon.js","common/validate.js","common/FormError.js"],"names":["withRouter","props","t","useTranslation","useState","fullname","errorMessage","email","phone","address","stateInput","setStateInput","inputFullname","useRef","inputEmail","inputAddress","inputPhone","handleInputValidate","e","name","target","validateInput","getValueInput","newState","checkEmailDuplicate","callApi","current","value","then","res","data","length","handlePaymentPage","NotificationManager","warning","a","localStorage","getItem","customer","id","uuidv4","userId","JSON","parse","setItem","stringify","history","push","useEffect","firstName","lastName","className","onSubmit","preventDefault","handleContinue","type","ref","onKeyUp","readOnly","onClick","InfoCustomer","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rng","Error","validate","uuid","REGEX","test","byteToHex","i","toString","substr","arr","offset","arguments","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","firstname","lastname","password","checkingText","pass","i18next","exec","passConfirm","getTranslationCategory","category","FormError"],"mappings":"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","file":"static/js/85.fc2513c9.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport NotificationManager from \"react-notifications/lib/NotificationManager\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport callApi from \"../../common/callApi\";\r\nimport FormError from \"../../common/FormError\";\r\nimport { getValueInput, validateInput } from \"../../common/validate\";\r\n\r\nconst InfoCustomerList = (props) => {\r\n  const { t } = useTranslation(\"translation\");\r\n  const [stateInput, setStateInput] = useState({\r\n    fullname: {\r\n      errorMessage: \"\",\r\n    },\r\n    email: {\r\n      errorMessage: \"\",\r\n    },\r\n    phone: {\r\n      errorMessage: \"\",\r\n    },\r\n    address: {\r\n      errorMessage: \"\",\r\n    },\r\n  });\r\n\r\n  const inputFullname = useRef();\r\n  const inputEmail = useRef();\r\n  const inputAddress = useRef();\r\n  const inputPhone = useRef();\r\n\r\n  const handleInputValidate = (e) => {\r\n    const { name } = e.target;\r\n    const { errorMessage } = validateInput(\r\n      name,\r\n      getValueInput(\r\n        name,\r\n        inputEmail,\r\n        \"\",\r\n        \"\",\r\n        inputPhone,\r\n        \"\",\r\n        \"\",\r\n        inputFullname,\r\n        inputAddress\r\n      )\r\n    );\r\n    const newState = { ...stateInput[name] };\r\n    newState.errorMessage = errorMessage;\r\n    setStateInput({ ...stateInput, [name]: newState });\r\n  };\r\n\r\n  const handleContinue = (e) => {\r\n    e.preventDefault();\r\n    const fullname = inputFullname.current.value;\r\n    const address = inputAddress.current.value;\r\n    const email = inputEmail.current.value;\r\n    const phone = inputPhone.current.value;\r\n\r\n    if (fullname !== \"\" && address !== \"\" && email !== \"\" && phone !== \"\") {\r\n      if (localStorage.getItem(\"Token\") === null) {\r\n        checkEmailDuplicate();\r\n      } else handlePaymentPage();\r\n    } else\r\n      NotificationManager.warning(\"Warning message\", t(\"register.require\"));\r\n  };\r\n\r\n  const checkEmailDuplicate = () => {\r\n    callApi(`users?email=${inputEmail.current.value}`, \"get\", null).then(\r\n      (res) => {\r\n        if (res.data.length === 0) {\r\n          handlePaymentPage();\r\n          return false;\r\n        } else {\r\n          NotificationManager.warning(\r\n            \"Warning message\",\r\n            t(\"register.email-exist\")\r\n          );\r\n          return true;\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const handlePaymentPage = async () => {\r\n    if (localStorage.getItem(\"Token\") !== null) {\r\n      let customer = {\r\n        id: uuidv4(),\r\n        userId: JSON.parse(localStorage.getItem(\"Token\")).id,\r\n        fullname: inputFullname.current.value,\r\n        email: inputEmail.current.value,\r\n        address: inputAddress.current.value,\r\n        phone: inputPhone.current.value,\r\n      };\r\n\r\n      await callApi(`customers`, \"post\", { ...customer }).then((res) => {\r\n        localStorage.setItem(\"idCustomer\", JSON.stringify(customer.id));\r\n        props.history.push(\"/payment\");\r\n      });\r\n    } else {\r\n      let customer = {\r\n        id: uuidv4(),\r\n        fullname: inputFullname.current.value,\r\n        email: inputEmail.current.value,\r\n        address: inputAddress.current.value,\r\n        phone: inputPhone.current.value,\r\n      };\r\n\r\n      localStorage.setItem(\"customers\", JSON.stringify({ ...customer }));\r\n      localStorage.setItem(\"idCustomer\", JSON.stringify(customer.id));\r\n      props.history.push(\"/payment\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"Token\") !== null) {\r\n      inputFullname.current.value =\r\n        JSON.parse(localStorage.getItem(\"Token\")).firstName +\r\n        \" \" +\r\n        JSON.parse(localStorage.getItem(\"Token\")).lastName;\r\n      inputEmail.current.value = JSON.parse(\r\n        localStorage.getItem(\"Token\")\r\n      ).email;\r\n      inputPhone.current.value = JSON.parse(\r\n        localStorage.getItem(\"Token\")\r\n      ).phone;\r\n    }\r\n  }, []);\r\n\r\n  const handleBackCartPage = () => {\r\n    props.history.push(\"/cart\");\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"information-checkout\">\r\n        <div className=\"box\">\r\n          <div className=\"information-checkout__content\">\r\n            <div className=\"information-checkout__content__title title-content\">\r\n              <h1>{t(\"information.title\")}</h1>\r\n            </div>\r\n            <div className=\"information-checkout__content__form form\">\r\n              <form onSubmit={(e) => handleContinue(e)}>\r\n                <div className=\"form-group\">\r\n                  <label>\r\n                    {t(\"information.label1\")} <span>*</span>\r\n                  </label>\r\n                  {localStorage.getItem(\"Token\") !== null ? (\r\n                    <input\r\n                      id=\"infor-receiver\"\r\n                      name=\"fullname\"\r\n                      type=\"text\"\r\n                      ref={inputFullname}\r\n                      onKeyUp={handleInputValidate}\r\n                      readOnly\r\n                    />\r\n                  ) : (\r\n                    <input\r\n                      id=\"infor-receiver\"\r\n                      name=\"fullname\"\r\n                      type=\"text\"\r\n                      ref={inputFullname}\r\n                      onKeyUp={handleInputValidate}\r\n                    />\r\n                  )}\r\n                  <i className=\"fas fa-check-circle\"></i>\r\n                  <i className=\"fas fa-exclamation-circle\"></i>\r\n                  <FormError errorMessage={stateInput.fullname.errorMessage} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>\r\n                    {t(\"information.label2\")} <span>*</span>\r\n                  </label>\r\n                  <input\r\n                    id=\"infor-address\"\r\n                    name=\"address\"\r\n                    type=\"text\"\r\n                    ref={inputAddress}\r\n                    onKeyUp={handleInputValidate}\r\n                  />\r\n                  <i className=\"fas fa-check-circle\"></i>\r\n                  <i className=\"fas fa-exclamation-circle\"></i>\r\n                  <FormError errorMessage={stateInput.address.errorMessage} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>\r\n                    {t(\"information.label3\")} <span>*</span>\r\n                  </label>\r\n                  {localStorage.getItem(\"Token\") !== null ? (\r\n                    <input\r\n                      id=\"infor-email\"\r\n                      name=\"email\"\r\n                      type=\"text\"\r\n                      ref={inputEmail}\r\n                      onKeyUp={handleInputValidate}\r\n                      readOnly\r\n                    />\r\n                  ) : (\r\n                    <input\r\n                      id=\"infor-email\"\r\n                      name=\"email\"\r\n                      type=\"text\"\r\n                      ref={inputEmail}\r\n                      onKeyUp={handleInputValidate}\r\n                    />\r\n                  )}\r\n                  <i className=\"fas fa-check-circle\"></i>\r\n                  <i className=\"fas fa-exclamation-circle\"></i>\r\n                  <FormError errorMessage={stateInput.email.errorMessage} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>\r\n                    {t(\"information.label4\")} <span>*</span>\r\n                  </label>\r\n                  {localStorage.getItem(\"Token\") !== null ? (\r\n                    <input\r\n                      id=\"infor-phone\"\r\n                      name=\"phone\"\r\n                      type=\"telephone\"\r\n                      ref={inputPhone}\r\n                      onKeyUp={handleInputValidate}\r\n                      readOnly\r\n                    />\r\n                  ) : (\r\n                    <input\r\n                      id=\"infor-phone\"\r\n                      name=\"phone\"\r\n                      type=\"telephone\"\r\n                      ref={inputPhone}\r\n                      onKeyUp={handleInputValidate}\r\n                    />\r\n                  )}\r\n\r\n                  <i className=\"fas fa-check-circle\"></i>\r\n                  <i className=\"fas fa-exclamation-circle\"></i>\r\n                  <FormError errorMessage={stateInput.phone.errorMessage} />\r\n                </div>\r\n                <div className=\"information-checkout__form__btn btn-form\">\r\n                  <button type=\"button\" onClick={handleBackCartPage}>\r\n                    <i className=\"fas fa-hand-point-left\"></i>\r\n                    {t(\"information.btn-back\")}\r\n                  </button>\r\n                  <button type=\"submit\">{t(\"information.btn-goon\")}</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default withRouter(InfoCustomerList);\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport InfoCustomerList from \"../../../components/information-customer/infoCustomerList\";\r\n\r\nconst InfoCustomer = () => {\r\n  const { t } = useTranslation(\"translation\");\r\n  return (\r\n    <main>\r\n      <section>\r\n        <div className=\"box\">\r\n          <div className=\"process\">\r\n            <div className=\"progressbar\">\r\n              <div className=\"page-information\">\r\n                <span>Step 2: {t(\"process.step2\")}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <InfoCustomerList />\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default InfoCustomer;\r\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","export const email = /\\S+@\\S+\\.\\S+/;\r\nexport const firstname = /^[a-zA-Z]+$/;\r\nexport const lastname = /^[a-zA-Z]+$/;\r\nexport const phone = /^\\d{10}$/;\r\nexport const password = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$/;\r\nexport const fullname = /^[a-zA-Z ]+$/;\r\nexport const address = /^[a-zA-Z0-9\\s,-]*$/;\r\n","import i18next from \"i18next\";\r\nimport {\r\n  address,\r\n  email,\r\n  firstname,\r\n  fullname,\r\n  lastname,\r\n  password,\r\n  phone,\r\n} from \"./constCommon\";\r\n\r\nexport const validateInput = (type, checkingText, pass) => {\r\n  if (checkingText === \"\") {\r\n    return { errorMessage: i18next.t(\"validate.require\") };\r\n  }\r\n\r\n  if (type === \"email\") {\r\n    const regexp = email;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.email\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"firstname\") {\r\n    const regexp = firstname;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.firstname\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"lastname\") {\r\n    const regexp = lastname;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.lastname\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"phone\") {\r\n    const regexp = phone;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.phone\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"password\") {\r\n    const regexp = password;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.password\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"confirmPass\") {\r\n    const regexPass = pass;\r\n    if (checkingText === regexPass) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.confirm\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"fullname\") {\r\n    const regexp = fullname;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.fullname\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"address\") {\r\n    const regexp = address;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.address\"),\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport const getValueInput = (\r\n  name,\r\n  email,\r\n  firstname,\r\n  lastname,\r\n  phone,\r\n  pass,\r\n  passConfirm,\r\n  fullname,\r\n  address\r\n) => {\r\n  switch (name) {\r\n    case \"email\":\r\n      return email.current.value;\r\n    case \"firstname\":\r\n      return firstname.current.value;\r\n    case \"lastname\":\r\n      return lastname.current.value;\r\n    case \"phone\":\r\n      return phone.current.value;\r\n    case \"password\":\r\n      return pass.current.value;\r\n    case \"confirmPass\":\r\n      return passConfirm.current.value;\r\n    case \"fullname\":\r\n      return fullname.current.value;\r\n    case \"address\":\r\n      return address.current.value;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const getTranslationCategory = (category) => {\r\n  switch (category) {\r\n    case \"cosmetic\":\r\n      return i18next.t(\"grid.category1\");\r\n    case \"makeup\":\r\n      return i18next.t(\"grid.category2\");\r\n    case \"perfume\":\r\n      return i18next.t(\"grid.category3\");\r\n    case \"lotions\":\r\n      return i18next.t(\"grid.menu1_1\");\r\n    case \"mask\":\r\n      return i18next.t(\"grid.menu1_2\");\r\n    case \"cleanser\":\r\n      return i18next.t(\"grid.menu1_3\");\r\n    case \"lipstick\":\r\n      return i18next.t(\"grid.menu2_1\");\r\n    case \"mascara\":\r\n      return i18next.t(\"grid.menu2_2\");\r\n    case \"blusher\":\r\n      return i18next.t(\"grid.menu2_3\");\r\n    default:\r\n      return category;\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nconst FormError = (props) => {\r\n  return (\r\n    <div className=\"text-left text-danger font-italic\">\r\n      {props.errorMessage}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormError;\r\n"],"sourceRoot":""}