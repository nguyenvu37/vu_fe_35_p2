{"version":3,"sources":["components/history-order/order-list.js","pages/user-page/history-order/historyOrder.js","common/calculation.js","components/history-order/order-item.js"],"names":["withRouter","props","t","useTranslation","useState","data","setData","sum","setSum","useEffect","a","callApi","JSON","parse","localStorage","getItem","id","then","res","status","undefined","dataProducts","summary","getSummary","fetchData","className","style","minHeight","length","map","item","index","key","marginTop","fontSize","marginLeft","toString","replace","type","onClick","history","push","height","width","display","flexDirection","justifyContent","alignItems","to","HistoryOrder","arr","parseInt","quantity","Math","floor","price","discount","reduce","b","getTotal","getPrice","getQuantity","getKeywordText","str","toUpperCase","split","filter","x","join","getKeywordId","formCurencyVN","toLocaleString","currency","OrderItem","useHistory","textTransform","src","require","img","alt","code","padding","cursor","name","minWidtd"],"mappings":"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","file":"static/js/94.e1bc5695.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getSummary } from \"../../common/calculation\";\r\nimport callApi from \"../../common/callApi\";\r\nimport OrderItem from \"./order-item\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst OrderList = (props) => {\r\n  const { t } = useTranslation(\"translation\");\r\n  const [data, setData] = useState([]);\r\n  const [sum, setSum] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await callApi(\r\n        `order?userId=${JSON.parse(localStorage.getItem(\"Token\")).id}`,\r\n        \"get\",\r\n        null\r\n      ).then((res) => {\r\n        if (res && res.status === 200 && res.data) {\r\n          if (res.data[0] !== undefined) {\r\n            const dataProducts = [...res.data][0].data;\r\n            let summary = getSummary(dataProducts);\r\n            setData([...dataProducts]);\r\n            setSum(summary);\r\n          } else {\r\n            setData([]);\r\n            setSum(0);\r\n          }\r\n        } else {\r\n          setData([]);\r\n          setSum(0);\r\n        }\r\n      });\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"cart\" style={{ minHeight: \"500px\" }}>\r\n      {data.length > 0 ? (\r\n        <div className=\"box\">\r\n          <div className=\"cart__content\">\r\n            <div className=\"cart__content__title\">\r\n              <h1>{t(\"order.title\")}</h1>\r\n            </div>\r\n            <div className=\"cart__content__table\">\r\n              <table>\r\n                <tbody>\r\n                  <tr>\r\n                    <th>{t(\"cart.th1\")}</th>\r\n                    <th>{t(\"cart.th2\")}</th>\r\n                    <th>{t(\"cart.th3\")}</th>\r\n                    <th>{t(\"cart.th4\")}</th>\r\n                    <th>{t(\"cart.th7\")}</th>\r\n                    <th>{t(\"cart.th5\")}</th>\r\n                  </tr>\r\n                </tbody>\r\n                <tbody>\r\n                  {data.map((item, index) => {\r\n                    return <OrderItem key={index} data={item} />;\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"cart__content__total\" style={{ marginTop: \"20px\" }}>\r\n              <h4>\r\n                {t(\"cart.h4\")}:{\" \"}\r\n                <span\r\n                  className=\"price\"\r\n                  style={{ fontSize: \"22px\", marginLeft: \"10px\" }}\r\n                >\r\n                  {sum.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\r\n                  <small>đ</small>\r\n                </span>\r\n              </h4>\r\n              <span className=\"price\"></span>\r\n            </div>\r\n            <div className=\"cart__content__btn\">\r\n              <button\r\n                className=\"buying\"\r\n                type=\"button\"\r\n                onClick={() => props.history.push(\"/\")}\r\n              >\r\n                {t(\"cart.btn-goon\")}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className=\"box\"\r\n          style={{\r\n            height: \"500px\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <h4>{t(\"nothing-order\")}</h4>\r\n          <Link className=\"buy\" to=\"/\">\r\n            {t(\"buy-now\")}\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default withRouter(OrderList);\r\n","import React from \"react\";\r\nimport OrderList from \"../../../components/history-order/order-list\";\r\n\r\nconst HistoryOrder = () => {\r\n  return (\r\n    <main>\r\n      <OrderList />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default HistoryOrder;\r\n","export const getSummary = (arr) => {\r\n  return arr\r\n    .map(\r\n      (item) =>\r\n        parseInt(item.quantity) *\r\n        Math.floor(item.price * ((100 - item.discount) / 100))\r\n    )\r\n    .reduce((a, b) => a + b, 0);\r\n};\r\n\r\nexport const getTotal = (data, quantity) => {\r\n  return (\r\n    Math.floor(data.price * ((100 - data.discount) / 100)) * parseInt(quantity)\r\n  );\r\n};\r\n\r\nexport const getPrice = (data) => {\r\n  return Math.floor(data.price * ((100 - data.discount) / 100));\r\n};\r\n\r\nexport const getQuantity = (arr) => {\r\n  return arr.map((item) => item.quantity).reduce((a, b) => a + b, 0);\r\n};\r\n\r\nexport const getKeywordText = (str) => {\r\n  return str\r\n    .toUpperCase()\r\n    .split(\" \")\r\n    .filter((x) => x !== \"\")\r\n    .join(\"\");\r\n};\r\n\r\nexport const getKeywordId = (str) => {\r\n  return str\r\n    .toUpperCase()\r\n    .split(\"-\")\r\n    .filter((x) => x !== \"-\")\r\n    .join(\"\");\r\n};\r\n\r\nexport function formCurencyVN(price) {\r\n  return price.toLocaleString(\"it-IT\", {\r\n    style: \"currency\",\r\n    currency: \"VND\",\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getPrice, getTotal } from \"../../common/calculation\";\r\n\r\nconst OrderItem = (props) => {\r\n  const { data } = props;\r\n  const history = useHistory();\r\n  return (\r\n    <tr>\r\n      <td style={{ textTransform: \"uppercase\" }}>\r\n        <img\r\n          src={require(`../../assets/img/${data.img}`)}\r\n          alt=\"\"\r\n          style={{ width: \"60px\" }}\r\n        />\r\n        <h4>{data.code}</h4>\r\n      </td>\r\n      <td\r\n        style={{ width: \"200px\", padding: \"0 5px\", cursor: \"pointer\" }}\r\n        onClick={() => history.push(`/detail/${data.code}`)}\r\n      >\r\n        {data.name}\r\n      </td>\r\n      <td style={{ minWidtd: \"65px\" }}>\r\n        <span className=\"price\">\r\n          {getPrice(data)\r\n            .toString()\r\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\r\n          <small>đ</small>\r\n        </span>\r\n      </td>\r\n      <td style={{ width: \"90px\" }}>{data.quantity}</td>\r\n      <td style={{ width: \"120px\" }}>{data.status}</td>\r\n      <td>\r\n        <span className=\"price\">\r\n          {getTotal(data, data.quantity)\r\n            .toString()\r\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\r\n          <small>đ</small>\r\n        </span>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default OrderItem;\r\n"],"sourceRoot":""}