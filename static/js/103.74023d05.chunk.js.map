{"version":3,"sources":["common/convertArrayPages.js","pages/admin/component/pagination/paginationAdmin.js"],"names":["getArrayFromTotalPage","number","arr","i","push","PaginationAdmin","props","totalRows","pagination","onChangePage","_limit","_page","totalPages","Math","ceil","parseInt","length","numberPages","t","useTranslation","handlePageChange","newPage","window","scrollTo","pages","map","item","activePage","className","key","onClick","disabled"],"mappings":"iHAAe,SAASA,EAAsBC,GAE5C,IADA,IAAIC,EAAM,GACDC,EAAI,EAAGA,EAAIF,EAAQE,IAC1BD,EAAIE,KAAKD,GAEX,OAAOD,EALT,gD,gCCAA,4CAkEeG,UA9Df,SAAyBC,GAAQ,IACvBC,EAAwCD,EAAxCC,UAAWC,EAA6BF,EAA7BE,WAAYC,EAAiBH,EAAjBG,aACvBC,EAAkBF,EAAlBE,OAAQC,EAAUH,EAAVG,MACVC,EAAaC,KAAKC,KACtBC,SAASR,EAAYA,EAAUS,OAAS,GAAKN,GAGzCO,EAAcjB,kBAAsBY,GAClCM,EAAMC,cAAND,EAER,SAASE,EAAiBC,GACxBC,OAAOC,SAAS,EAAG,KACnBd,EAAaY,GAGf,IAAMG,EAAQP,EAAYQ,KAAI,SAACC,GAC7B,IAAIC,EAAa,GAKjB,OAJIhB,IAAUe,EAAO,IACnBC,EAAa,UAIb,wBAAIC,UAAU,oBAAoBC,IAAKH,GACrC,4BACEE,UAAS,kCAA6BD,GACtCG,QAAS,kBAAMV,EAAiBM,EAAO,KAEtCA,EAAO,OAMhB,OACE,6BAASE,UAAU,eACjB,4BACE,wBAAIA,UAAU,qBACZ,4BACEA,UAAU,0BACVG,SAAUpB,GAAS,EACnBmB,QAAS,kBAAMV,EAAiBT,EAAQ,KAExC,uBAAGiB,UAAU,qBACZV,EAAE,UAGNM,EACD,wBAAII,UAAU,qBACZ,4BACEA,UAAU,0BACVG,SAAUpB,GAASC,EACnBkB,QAAS,kBAAMV,EAAiBT,EAAQ,KAEvCO,EAAE,QACH,uBAAGU,UAAU","file":"static/js/103.74023d05.chunk.js","sourcesContent":["export default function getArrayFromTotalPage(number) {\r\n  let arr = [];\r\n  for (let i = 0; i < number; i++) {\r\n    arr.push(i);\r\n  }\r\n  return arr;\r\n}\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport getArrayFromTotalPage from \"../../../../common/convertArrayPages\";\r\n\r\nfunction PaginationAdmin(props) {\r\n  const { totalRows, pagination, onChangePage } = props;\r\n  const { _limit, _page } = pagination;\r\n  const totalPages = Math.ceil(\r\n    parseInt(totalRows ? totalRows.length : 0) / _limit\r\n  );\r\n\r\n  const numberPages = getArrayFromTotalPage(totalPages);\r\n  const { t } = useTranslation();\r\n\r\n  function handlePageChange(newPage) {\r\n    window.scrollTo(0, 100);\r\n    onChangePage(newPage);\r\n  }\r\n\r\n  const pages = numberPages.map((item) => {\r\n    let activePage = \"\";\r\n    if (_page === item + 1) {\r\n      activePage = \"active\";\r\n    }\r\n\r\n    return (\r\n      <li className=\"paginations__item\" key={item}>\r\n        <button\r\n          className={`paginations__item__link ${activePage}`}\r\n          onClick={() => handlePageChange(item + 1)}\r\n        >\r\n          {item + 1}\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section className=\"paginations\">\r\n      <ul>\r\n        <li className=\"paginations__item\">\r\n          <button\r\n            className=\"paginations__item__link\"\r\n            disabled={_page <= 1 ? true : false}\r\n            onClick={() => handlePageChange(_page - 1)}\r\n          >\r\n            <i className=\"fa fa-angle-left\"></i>\r\n            {t(\"prev\")}\r\n          </button>\r\n        </li>\r\n        {pages}\r\n        <li className=\"paginations__item\">\r\n          <button\r\n            className=\"paginations__item__link\"\r\n            disabled={_page >= totalPages ? true : false}\r\n            onClick={() => handlePageChange(_page + 1)}\r\n          >\r\n            {t(\"next\")}\r\n            <i className=\"fa fa-angle-right\"></i>\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PaginationAdmin;\r\n"],"sourceRoot":""}