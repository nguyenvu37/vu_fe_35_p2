{"version":3,"sources":["components/payment/paymentList.js","pages/user-page/payment/payment.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","common/calculation.js","components/payment/paymentItem.js"],"names":["withRouter","props","t","useTranslation","idCustomer","JSON","parse","localStorage","getItem","useState","dataCustomer","setDataCustomer","dataProduct","setDataProduct","sum","setSum","inCart","useSelector","state","addCart","useEffect","fetchDataCustomer","a","callApi","then","res","status","data","customers","fetchDataProduct","id","carts","dataCarts","summary","getSummary","handleCompletePayment","products","forEach","item","dataOrder","total","getTotal","quantity","time","Date","now","push","order","uuidv4","userId","fullname","setItem","stringify","history","className","length","address","email","phone","map","index","key","style","fontSize","marginLeft","toString","replace","type","onClick","height","width","display","flexDirection","justifyContent","alignItems","to","Payment","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rng","Error","validate","uuid","REGEX","test","byteToHex","i","substr","arr","offset","arguments","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","parseInt","Math","floor","price","discount","reduce","b","getPrice","getQuantity","getKeywordText","str","toUpperCase","split","filter","x","join","getKeywordId","formCurencyVN","toLocaleString","currency","textTransform","src","require","img","alt","code","padding","cursor","name","minWidtd"],"mappings":"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","file":"static/js/89.2bd6f72b.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport callApi from \"../../common/callApi\";\r\nimport PaymentItem from \"./paymentItem\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getSummary, getTotal } from \"../../common/calculation\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PaymentList = (props) => {\r\n  const { t } = useTranslation(\"translation\");\r\n  const idCustomer = JSON.parse(localStorage.getItem(\"idCustomer\")) || \"\";\r\n  const [dataCustomer, setDataCustomer] = useState([]);\r\n  const [dataProduct, setDataProduct] = useState([]);\r\n  const [sum, setSum] = useState(0);\r\n  const inCart = useSelector((state) => state.addCart);\r\n\r\n  useEffect(() => {\r\n    const fetchDataCustomer = async () => {\r\n      if (localStorage.getItem(\"Token\") !== null) {\r\n        await callApi(`customers?id=${idCustomer}`, \"get\", null).then((res) => {\r\n          if (res && res.status === 200 && res.data) {\r\n            setDataCustomer([...res.data]);\r\n          } else setDataCustomer([]);\r\n        });\r\n      } else {\r\n        const customers = JSON.parse(localStorage.getItem(\"customers\")) || {};\r\n        setDataCustomer([customers]);\r\n      }\r\n    };\r\n\r\n    const fetchDataProduct = async () => {\r\n      if (localStorage.getItem(\"Token\") !== null) {\r\n        await callApi(\r\n          `carts?userId=${JSON.parse(localStorage.getItem(\"Token\")).id}`,\r\n          \"get\",\r\n          null\r\n        ).then((res) => {\r\n          if (res && res.status === 200 && res.data) {\r\n            const carts = [...res.data];\r\n            const dataCarts = carts[0].data;\r\n            const summary = getSummary(carts[0].data);\r\n\r\n            setDataProduct([...dataCarts]);\r\n            setSum(summary);\r\n          } else {\r\n            setDataProduct([]);\r\n            setSum(0);\r\n          }\r\n        });\r\n      } else {\r\n        const summary = getSummary(inCart);\r\n        setDataProduct([...inCart]);\r\n        setSum(summary);\r\n      }\r\n    };\r\n\r\n    fetchDataCustomer();\r\n    fetchDataProduct();\r\n  }, [idCustomer, inCart]);\r\n\r\n  const handleBackInformation = () => {\r\n    props.history.push(\"/information-customer\");\r\n  };\r\n\r\n  const handleCompletePayment = async () => {\r\n    if (localStorage.getItem(\"Token\") !== null) {\r\n      const products = [];\r\n      await dataProduct.forEach((item) => {\r\n        let dataOrder = {\r\n          ...item,\r\n          total: getTotal(item, item.quantity),\r\n          time: Date.now(),\r\n        };\r\n        products.push({ ...dataOrder });\r\n      });\r\n      let order = {\r\n        id: uuidv4(),\r\n        userId: dataCustomer[0].userId,\r\n        fullname: dataCustomer[0].fullname,\r\n        data: [...products],\r\n      };\r\n      localStorage.setItem(\"order\", JSON.stringify({ ...order }));\r\n    } else {\r\n      const products = [];\r\n      await inCart.forEach((item) => {\r\n        let dataOrder = {\r\n          ...item,\r\n          total: getTotal(item, item.quantity),\r\n          time: Date.now(),\r\n        };\r\n        products.push({ ...dataOrder });\r\n      });\r\n      let order = {\r\n        id: uuidv4(),\r\n        userId: dataCustomer[0].id,\r\n        fullname: dataCustomer[0].fullname,\r\n        data: [...products],\r\n      };\r\n      localStorage.setItem(\"order\", JSON.stringify({ ...order }));\r\n    }\r\n\r\n    props.history.push(\"/credit-card\");\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"payment-complete\">\r\n        {dataProduct.length > 0 && dataCustomer.length > 0 ? (\r\n          <div className=\"box\">\r\n            <div className=\"payment-complete__content\">\r\n              <div className=\"payment-complete__content__title title-content\">\r\n                <h1>{t(\"payment.title\")}</h1>\r\n              </div>\r\n              <div className=\"payment-complete__content__info\">\r\n                <div className=\"payment-complete__content__info__customer\">\r\n                  <h4>{t(\"payment.h4\")}</h4>\r\n                  <div className=\"customer-item\">\r\n                    <p className=\"customer-receiver\">\r\n                      {t(\"payment.label1\")}:\r\n                      <span>{dataCustomer[0].fullname}</span>\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"customer-item\">\r\n                    <p className=\"customer-address\">\r\n                      {t(\"payment.label2\")}:\r\n                      <span>{dataCustomer[0].address}</span>\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"customer-item\">\r\n                    <p className=\"customer-email\">\r\n                      {t(\"payment.label3\")}:<span>{dataCustomer[0].email}</span>\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"customer-item\">\r\n                    <p className=\"customer-phone\">\r\n                      {t(\"payment.label4\")}:<span>{dataCustomer[0].phone}</span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"payment-complete__content__info__product\">\r\n                  <table>\r\n                    <tbody>\r\n                      <tr>\r\n                        <th>{t(\"payment.th1\")}</th>\r\n                        <th>{t(\"payment.th2\")}</th>\r\n                        <th>{t(\"payment.th3\")}</th>\r\n                        <th>{t(\"payment.th4\")}</th>\r\n                        <th>{t(\"payment.th5\")}</th>\r\n                      </tr>\r\n                    </tbody>\r\n                    <tbody>\r\n                      {dataProduct.map((item, index) => {\r\n                        return <PaymentItem key={index} data={item} />;\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                  <div className=\"payment-complete__content__info__product__total\">\r\n                    <h4>\r\n                      {t(\"payment.sum\")}:\r\n                      <span\r\n                        className=\"price\"\r\n                        style={{ fontSize: \"22px\", marginLeft: \"10px\" }}\r\n                      >\r\n                        {sum.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\r\n                        <small>đ</small>\r\n                      </span>\r\n                    </h4>\r\n                    <span className=\"price\"></span>\r\n                  </div>\r\n                  <div className=\"payment-complete__content__info__product__btn\">\r\n                    <button\r\n                      className=\"back-info\"\r\n                      type=\"button\"\r\n                      onClick={handleBackInformation}\r\n                    >\r\n                      <i className=\"fas fa-hand-point-left\"></i>\r\n                      {t(\"payment.btn-back\")}\r\n                    </button>\r\n                    <button\r\n                      className=\"checkout\"\r\n                      type=\"button\"\r\n                      onClick={handleCompletePayment}\r\n                    >\r\n                      {t(\"payment.btn-payment\")}{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            className=\"box\"\r\n            style={{\r\n              height: \"500px\",\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <h4>{t(\"nothing-cart\")}</h4>\r\n            <Link className=\"buy\" to=\"/\">\r\n              {t(\"buy-now\")}\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default withRouter(PaymentList);\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PaymentList from \"../../../components/payment/paymentList\";\r\n\r\nconst Payment = () => {\r\n  const { t } = useTranslation(\"translation\");\r\n  return (\r\n    <main>\r\n      <div className=\"box\">\r\n        <div className=\"process\">\r\n          <div className=\"progressbar\">\r\n            <div className=\"page-payment\">\r\n              <span>Step 3: {t(\"process.step3\")}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <PaymentList />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","export const getSummary = (arr) => {\r\n  return arr\r\n    .map(\r\n      (item) =>\r\n        parseInt(item.quantity) *\r\n        Math.floor(item.price * ((100 - item.discount) / 100))\r\n    )\r\n    .reduce((a, b) => a + b, 0);\r\n};\r\n\r\nexport const getTotal = (data, quantity) => {\r\n  return (\r\n    Math.floor(data.price * ((100 - data.discount) / 100)) * parseInt(quantity)\r\n  );\r\n};\r\n\r\nexport const getPrice = (data) => {\r\n  return Math.floor(data.price * ((100 - data.discount) / 100));\r\n};\r\n\r\nexport const getQuantity = (arr) => {\r\n  return arr.map((item) => item.quantity).reduce((a, b) => a + b, 0);\r\n};\r\n\r\nexport const getKeywordText = (str) => {\r\n  return str\r\n    .toUpperCase()\r\n    .split(\" \")\r\n    .filter((x) => x !== \"\")\r\n    .join(\"\");\r\n};\r\n\r\nexport const getKeywordId = (str) => {\r\n  return str\r\n    .toUpperCase()\r\n    .split(\"-\")\r\n    .filter((x) => x !== \"-\")\r\n    .join(\"\");\r\n};\r\n\r\nexport function formCurencyVN(price) {\r\n  return price.toLocaleString(\"it-IT\", {\r\n    style: \"currency\",\r\n    currency: \"VND\",\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getPrice, getTotal } from \"../../common/calculation\";\r\n\r\nconst PaymentItem = (props) => {\r\n  const handleDetailPage = (id) => {\r\n    props.history.push(`/detail/${id}`);\r\n  };\r\n  const { data } = props;\r\n  return (\r\n    <tr>\r\n      <td style={{ textTransform: \"uppercase\" }}>\r\n        <img\r\n          src={require(`../../assets/img/${data.img}`)}\r\n          alt=\"\"\r\n          style={{ width: \"60px\" }}\r\n        />\r\n        <h4>{data.code}</h4>\r\n      </td>\r\n      <td\r\n        style={{ width: \"200px\", padding: \"0 5px\", cursor: \"pointer\" }}\r\n        onClick={() => handleDetailPage(data.code)}\r\n      >\r\n        {data.name}\r\n      </td>\r\n      <td style={{ minWidtd: \"65px\" }}>\r\n        <span className=\"price\">\r\n          {getPrice(data)\r\n            .toString()\r\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\r\n          <small>đ</small>\r\n        </span>\r\n      </td>\r\n      <td style={{ width: \"90px\" }}>{data.quantity}</td>\r\n      <td style={{ width: \"120px\" }}>\r\n        <span className=\"price\">\r\n          {getTotal(data, data.quantity)\r\n            .toString()\r\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\r\n          <small>đ</small>\r\n        </span>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default withRouter(PaymentItem);\r\n"],"sourceRoot":""}