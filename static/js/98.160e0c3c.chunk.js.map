{"version":3,"sources":["pages/admin/pages/loginAdmin.js","common/callApi.js","config/config.js"],"names":["containerDiv","position","top","left","right","warpDivLogin","width","padding","marginLeft","marginRight","backgroundColor","border","borderRadius","boxShadow","color","inputGroupStype","fontSize","withRouter","props","t","useTranslation","useState","valueUserName","setValueUserName","valuePassword","setValuePassword","className","style","onSubmit","e","preventDefault","callApi","then","res","status","data","password","role","localStorage","setItem","JSON","stringify","NotificationManager","success","history","push","error","textTransform","margin","onChange","target","value","type","name","endPoint","method","axios","url","config","catch","alert","console","log","host"],"mappings":"kMAMMA,EAAe,CACnBC,SAAU,WACVC,IAAK,MACLC,KAAM,KACNC,MAAO,MAGHC,EAAe,CACnBC,MAAO,QACPC,QAAS,OACTC,WAAY,OACZC,YAAa,OACbC,gBAAiB,OACjBC,OAAQ,EACRC,aAAc,OACdC,UAAW,qCACXC,MAAO,QAGHC,EAAkB,CACtBH,aAAc,OACdI,SAAU,OACVT,QAAS,OACTG,gBAAiB,OACjBI,MAAO,QAsFMG,uBAnFI,SAACC,GAAW,IACrBC,EAAMC,YAAe,eAArBD,EADoB,EAEcE,mBAAS,IAFvB,mBAErBC,EAFqB,KAENC,EAFM,OAGcF,mBAAS,IAHvB,mBAGrBG,EAHqB,KAGNC,EAHM,KAuB5B,OACE,yBAAKC,UAAU,eACb,yBAAKC,MAAO3B,GACV,0BAAM4B,SArBW,SAACC,GACtBA,EAAEC,iBAEFC,kBAAQ,kBAAD,OAAmBT,GAAiB,MAAO,MAAMU,MAAK,SAACC,GACxDA,GAAsB,MAAfA,EAAIC,SAEXD,EAAIE,KAAK,IACTF,EAAIE,KAAK,GAAGC,WAAaZ,GACJ,UAArBS,EAAIE,KAAK,GAAGE,MAEZC,aAAaC,QAAQ,aAAcC,KAAKC,UAAUR,EAAIE,KAAK,KAC3DO,IAAoBC,QAAQxB,EAAE,kBAC9BD,EAAM0B,QAAQC,KAAK,qBACdH,IAAoBI,MAAM3B,EAAE,oBASjC,yBAAKQ,MAAOtB,GACV,yBAAKqB,UAAU,qBACb,wBAAIA,UAAU,QAAQP,EAAE,iBAE1B,yBAAKO,UAAU,cACb,2BACEC,MAAO,CACLb,MAAO,OACPiC,cAAe,YACfC,OAAQ,WAGT7B,EAAE,kBAPL,IAOyB,KAEzB,2BACE8B,SAAU,SAACpB,GACTN,EAAiBM,EAAEqB,OAAOC,QAE5BC,KAAK,OACLC,KAAK,WACL3B,UAAU,eACVC,MAAOZ,EACPoC,MAAO7B,KAGX,yBAAKI,UAAU,cACb,2BACEC,MAAO,CACLb,MAAO,OACPiC,cAAe,YACfC,OAAQ,WAGT7B,EAAE,kBAPL,IAOyB,KAEzB,2BACE8B,SAAU,SAACpB,GACTJ,EAAiBI,EAAEqB,OAAOC,QAE5BC,KAAK,WACLC,KAAK,WACL3B,UAAU,eACVC,MAAOZ,EACPoC,MAAO3B,KAGX,yBAAKE,UAAU,0BACb,4BAAQA,UAAU,YAAYP,EAAE,6B,gCC3G9C,6EAGe,SAASY,EAAQuB,GAAiC,IAAvBC,EAAsB,uDAAb,MAAOpB,EAAM,uCAC9D,OAAOqB,IAAM,CACXD,OAAQA,EACRE,IAAI,GAAD,OAAKC,OAAL,YAAoBJ,GACvBnB,KAAMA,IACLwB,OAAM,SAACb,GACRc,MAAM,qDACNC,QAAQC,IAAIhB,EAAMY,a,gCCVtB,4CAAO,IAAMK,EAAO","file":"static/js/98.160e0c3c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport NotificationManager from \"react-notifications/lib/NotificationManager\";\r\nimport callApi from \"../../../common/callApi\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst containerDiv = {\r\n  position: \"absolute\",\r\n  top: \"20%\",\r\n  left: \"5%\",\r\n  right: \"5%\",\r\n};\r\n\r\nconst warpDivLogin = {\r\n  width: \"400px\",\r\n  padding: \"20px\",\r\n  marginLeft: \"auto\",\r\n  marginRight: \"auto\",\r\n  backgroundColor: \"#333\",\r\n  border: 0,\r\n  borderRadius: \"1rem\",\r\n  boxShadow: \"0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1)\",\r\n  color: \"#fff\",\r\n};\r\n\r\nconst inputGroupStype = {\r\n  borderRadius: \"1rem\",\r\n  fontSize: \"17px\",\r\n  padding: \"20px\",\r\n  backgroundColor: \"#fff\",\r\n  color: \"#333\",\r\n};\r\n\r\nconst LoginAdmin = (props) => {\r\n  const { t } = useTranslation(\"translation\");\r\n  const [valueUserName, setValueUserName] = useState(\"\");\r\n  const [valuePassword, setValuePassword] = useState(\"\");\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    callApi(`users?userName=${valueUserName}`, \"Get\", null).then((res) => {\r\n      if (res && res.status === 200) {\r\n        if (\r\n          res.data[0] &&\r\n          res.data[0].password === valuePassword &&\r\n          res.data[0].role === \"admin\"\r\n        ) {\r\n          localStorage.setItem(\"TokenAdmin\", JSON.stringify(res.data[0]));\r\n          NotificationManager.success(t(\"admin.success\"));\r\n          props.history.push(\"/admin/dashboard\");\r\n        } else NotificationManager.error(t(\"admin.err\"));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-100 h-100\">\r\n      <div style={containerDiv}>\r\n        <form onSubmit={handleOnSubmit}>\r\n          <div style={warpDivLogin}>\r\n            <div className=\"w-100 text-center\">\r\n              <h1 className=\"mb-3\">{t(\"admin.title\")}</h1>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label\r\n                style={{\r\n                  color: \"#fff\",\r\n                  textTransform: \"uppercase\",\r\n                  margin: \"10px 0\",\r\n                }}\r\n              >\r\n                {t(\"admin.username\")}:{\" \"}\r\n              </label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setValueUserName(e.target.value);\r\n                }}\r\n                type=\"text\"\r\n                name=\"username\"\r\n                className=\"form-control\"\r\n                style={inputGroupStype}\r\n                value={valueUserName}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label\r\n                style={{\r\n                  color: \"#fff\",\r\n                  textTransform: \"uppercase\",\r\n                  margin: \"10px 0\",\r\n                }}\r\n              >\r\n                {t(\"admin.password\")}:{\" \"}\r\n              </label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setValuePassword(e.target.value);\r\n                }}\r\n                type=\"password\"\r\n                name=\"password\"\r\n                className=\"form-control\"\r\n                style={inputGroupStype}\r\n                value={valuePassword}\r\n              />\r\n            </div>\r\n            <div className=\"w-100 my-3 text-center\">\r\n              <button className=\"myButton\">{t(\"admin.btn-login\")}</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginAdmin);\r\n","import axios from \"axios\";\r\nimport * as config from \"../config/config\";\r\n\r\nexport default function callApi(endPoint, method = \"get\", data) {\r\n  return axios({\r\n    method: method,\r\n    url: `${config.host}/${endPoint}`,\r\n    data: data,\r\n  }).catch((error) => {\r\n    alert(\"Error: ERR_CONNECTION_REFUSED Please: Reload Page\");\r\n    console.log(error.config);\r\n  });\r\n}\r\n","export const host = \"https://data-mandala.herokuapp.com\";\r\n"],"sourceRoot":""}