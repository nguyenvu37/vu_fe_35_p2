{"version":3,"sources":["common/constCommon.js","common/validate.js"],"names":["email","firstname","lastname","phone","password","fullname","address","validateInput","type","checkingText","pass","errorMessage","i18next","t","exec","getValueInput","name","passConfirm","current","value","getTranslationCategory","category"],"mappings":"iHAAA,gSAAO,IAAMA,EAAQ,eACRC,EAAY,cACZC,EAAW,cACXC,EAAQ,WACRC,EAAW,yCACXC,EAAW,eACXC,EAAU,sB,gCCNvB,8KAWaC,EAAgB,SAACC,EAAMC,EAAcC,GAChD,MAAqB,KAAjBD,EACK,CAAEE,aAAcC,IAAQC,EAAE,qBAGtB,UAATL,EAGqB,OAFRR,QACec,KAAKL,GAE1B,CAAEE,aAAc,IAEhB,CACLA,aAAcC,IAAQC,EAAE,mBAKjB,cAATL,EAGqB,OAFRP,YACea,KAAKL,GAE1B,CAAEE,aAAc,IAEhB,CACLA,aAAcC,IAAQC,EAAE,uBAKjB,aAATL,EAGqB,OAFRN,WACeY,KAAKL,GAE1B,CAAEE,aAAc,IAEhB,CACLA,aAAcC,IAAQC,EAAE,sBAKjB,UAATL,EAGqB,OAFRL,QACeW,KAAKL,GAE1B,CAAEE,aAAc,IAEhB,CACLA,aAAcC,IAAQC,EAAE,mBAKjB,aAATL,EAGqB,OAFRJ,WACeU,KAAKL,GAE1B,CAAEE,aAAc,IAEhB,CACLA,aAAcC,IAAQC,EAAE,sBAKjB,gBAATL,EAEEC,IADcC,EAET,CAAEC,aAAc,IAEhB,CACLA,aAAcC,IAAQC,EAAE,qBAKjB,aAATL,EAGqB,OAFRH,WACeS,KAAKL,GAE1B,CAAEE,aAAc,IAEhB,CACLA,aAAcC,IAAQC,EAAE,sBAKjB,YAATL,EAGqB,OAFRF,UACeQ,KAAKL,GAE1B,CAAEE,aAAc,IAEhB,CACLA,aAAcC,IAAQC,EAAE,0BAP9B,GAaWE,EAAgB,SAC3BC,EACAhB,EACAC,EACAC,EACAC,EACAO,EACAO,EACAZ,EACAC,GAEA,OAAQU,GACN,IAAK,QACH,OAAOhB,EAAMkB,QAAQC,MACvB,IAAK,YACH,OAAOlB,EAAUiB,QAAQC,MAC3B,IAAK,WACH,OAAOjB,EAASgB,QAAQC,MAC1B,IAAK,QACH,OAAOhB,EAAMe,QAAQC,MACvB,IAAK,WACH,OAAOT,EAAKQ,QAAQC,MACtB,IAAK,cACH,OAAOF,EAAYC,QAAQC,MAC7B,IAAK,WACH,OAAOd,EAASa,QAAQC,MAC1B,IAAK,UACH,OAAOb,EAAQY,QAAQC,QAMhBC,EAAyB,SAACC,GACrC,OAAQA,GACN,IAAK,WACH,OAAOT,IAAQC,EAAE,kBACnB,IAAK,SACH,OAAOD,IAAQC,EAAE,kBACnB,IAAK,UACH,OAAOD,IAAQC,EAAE,kBACnB,IAAK,UACH,OAAOD,IAAQC,EAAE,gBACnB,IAAK,OACH,OAAOD,IAAQC,EAAE,gBACnB,IAAK,WACH,OAAOD,IAAQC,EAAE,gBACnB,IAAK,WACH,OAAOD,IAAQC,EAAE,gBACnB,IAAK,UACH,OAAOD,IAAQC,EAAE,gBACnB,IAAK,UACH,OAAOD,IAAQC,EAAE,gBACnB,QACE,OAAOQ","file":"static/js/102.032d5927.chunk.js","sourcesContent":["export const email = /\\S+@\\S+\\.\\S+/;\r\nexport const firstname = /^[a-zA-Z]+$/;\r\nexport const lastname = /^[a-zA-Z]+$/;\r\nexport const phone = /^\\d{10}$/;\r\nexport const password = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$/;\r\nexport const fullname = /^[a-zA-Z ]+$/;\r\nexport const address = /^[a-zA-Z0-9\\s,-]*$/;\r\n","import i18next from \"i18next\";\r\nimport {\r\n  address,\r\n  email,\r\n  firstname,\r\n  fullname,\r\n  lastname,\r\n  password,\r\n  phone,\r\n} from \"./constCommon\";\r\n\r\nexport const validateInput = (type, checkingText, pass) => {\r\n  if (checkingText === \"\") {\r\n    return { errorMessage: i18next.t(\"validate.require\") };\r\n  }\r\n\r\n  if (type === \"email\") {\r\n    const regexp = email;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.email\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"firstname\") {\r\n    const regexp = firstname;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.firstname\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"lastname\") {\r\n    const regexp = lastname;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.lastname\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"phone\") {\r\n    const regexp = phone;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.phone\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"password\") {\r\n    const regexp = password;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.password\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"confirmPass\") {\r\n    const regexPass = pass;\r\n    if (checkingText === regexPass) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.confirm\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"fullname\") {\r\n    const regexp = fullname;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.fullname\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"address\") {\r\n    const regexp = address;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.address\"),\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport const getValueInput = (\r\n  name,\r\n  email,\r\n  firstname,\r\n  lastname,\r\n  phone,\r\n  pass,\r\n  passConfirm,\r\n  fullname,\r\n  address\r\n) => {\r\n  switch (name) {\r\n    case \"email\":\r\n      return email.current.value;\r\n    case \"firstname\":\r\n      return firstname.current.value;\r\n    case \"lastname\":\r\n      return lastname.current.value;\r\n    case \"phone\":\r\n      return phone.current.value;\r\n    case \"password\":\r\n      return pass.current.value;\r\n    case \"confirmPass\":\r\n      return passConfirm.current.value;\r\n    case \"fullname\":\r\n      return fullname.current.value;\r\n    case \"address\":\r\n      return address.current.value;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const getTranslationCategory = (category) => {\r\n  switch (category) {\r\n    case \"cosmetic\":\r\n      return i18next.t(\"grid.category1\");\r\n    case \"makeup\":\r\n      return i18next.t(\"grid.category2\");\r\n    case \"perfume\":\r\n      return i18next.t(\"grid.category3\");\r\n    case \"lotions\":\r\n      return i18next.t(\"grid.menu1_1\");\r\n    case \"mask\":\r\n      return i18next.t(\"grid.menu1_2\");\r\n    case \"cleanser\":\r\n      return i18next.t(\"grid.menu1_3\");\r\n    case \"lipstick\":\r\n      return i18next.t(\"grid.menu2_1\");\r\n    case \"mascara\":\r\n      return i18next.t(\"grid.menu2_2\");\r\n    case \"blusher\":\r\n      return i18next.t(\"grid.menu2_3\");\r\n    default:\r\n      return category;\r\n  }\r\n};\r\n"],"sourceRoot":""}