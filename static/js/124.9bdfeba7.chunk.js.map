{"version":3,"sources":["pages/user-page/card-payment/creditCard.js"],"names":["withRouter","props","t","useTranslation","useState","cvc","setCvc","expiry","setExpiry","focus","setFocus","name","setName","number","setNumber","order","JSON","parse","localStorage","getItem","data","setData","dispatch","useDispatch","useEffect","a","callApi","then","res","status","fetchData","handlePay","e","preventDefault","length","arrOrder","filter","item","userId","newOrder","forEach","index","findIndex","itemOrder","code","quantity","dataOrder","unshift","id","removeItem","NotificationManager","success","history","push","products","clear","actAddCart","className","style","margin","display","alignItems","width","height","focused","onSubmit","type","placeholder","value","onChange","target","onFocus","flexDirection","justifyContent","to"],"mappings":"qQAuSeA,uBA7RI,SAACC,GAAW,IACrBC,EAAMC,YAAe,eAArBD,EADoB,EAENE,mBAAS,QAFH,mBAErBC,EAFqB,KAEhBC,EAFgB,OAGAF,mBAAS,SAHT,mBAGrBG,EAHqB,KAGbC,EAHa,OAIFJ,mBAAS,IAJP,mBAIrBK,EAJqB,KAIdC,EAJc,OAKJN,mBAAS,iBALL,mBAKrBO,EALqB,KAKfC,EALe,OAMAR,mBAAS,oBANT,mBAMrBS,EANqB,KAMbC,EANa,KAOtBC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GAP/B,EAQJf,mBAAS,IARL,mBAQrBgB,EARqB,KAQfC,EARe,KAStBC,EAAWC,cAEjBC,qBAAU,WAC8B,OAAlCN,aAAaC,QAAQ,UACR,uCAAG,sBAAAM,EAAA,sEACVC,kBAAQ,QAAS,MAAO,MAAMC,MAAK,SAACC,GACpCA,GAAsB,MAAfA,EAAIC,QAAkBD,EAAIR,KACnCC,EAAQ,YAAIO,EAAIR,OACXC,EAAQ,OAJD,2CAAH,oDAQfS,KAED,IAEH,IAAMC,EAAS,uCAAG,WAAOC,GAAP,qCAAAP,EAAA,yDAChBO,EAAEC,iBAEoC,OAAlCf,aAAaC,QAAQ,SAHT,sBAIVC,EAAKc,OAAS,GAJJ,oBAKNC,EAAWf,EAAKgB,QAAO,SAACC,GAAD,OAAUA,EAAKC,SAAWvB,EAAMuB,UACvDC,EAAWxB,EAAMK,OAEnBe,EAASD,OAAS,GARV,iCASJK,EAASC,SAAQ,SAACH,GACtB,IAAII,EAAQN,EAAS,GAAGf,KAAKsB,WAC3B,SAACC,GAAD,OAAeA,EAAUC,OAASP,EAAKO,QAGzC,IAAe,IAAXH,EACFN,EAAS,GAAGf,KAAKqB,GAAjB,2BACKN,EAAS,GAAGf,KAAKqB,IADtB,IAEEI,SAAUV,EAAS,GAAGf,KAAKqB,GAAOI,SAAWR,EAAKQ,eAE/C,CACL,IAAIC,EAAS,2BACRT,GADQ,IAEXR,OAAQ,SAGVM,EAAS,GAAGf,KAAK2B,QAAjB,eAA8BD,QAzBxB,OA6BVpB,kBAAQ,SAAD,OAAUS,EAAS,GAAGa,IAAM,MAA5B,eAAwCb,EAAS,KAAMR,MAC5D,WACED,kBAAQ,SAAD,OACIV,KAAKC,MAAMC,aAAaC,QAAQ,UAAU6B,IACnD,SACA,MACArB,MAAK,SAACC,GACNV,aAAa+B,WAAW,cACxB/B,aAAa+B,WAAW,SACxBC,IAAoBC,QAAQjD,EAAE,sBAC9BD,EAAMmD,QAAQC,KAAK,WAvCf,+BA4CJC,EAAW,GA5CP,UA6CJvC,EAAMK,KAAKoB,SAAQ,SAACH,GACxB,IAAIE,EAAQ,2BACPF,GADO,IAEVR,OAAQ,SAEVyB,EAASD,KAAT,eAAmBd,OAlDX,QAqDNO,EArDM,2BAsDL/B,GAtDK,IAuDRK,KAAK,GAAD,OAAMkC,KAGZ5B,kBAAQ,QAAS,OAAV,eAAuBoB,IAAanB,MAAK,WAC9CD,kBAAQ,SAAD,OACIV,KAAKC,MAAMC,aAAaC,QAAQ,UAAU6B,IACnD,SACA,MACArB,MAAK,WACLT,aAAa+B,WAAW,cACxB/B,aAAa+B,WAAW,SACxBC,IAAoBC,QAAQjD,EAAE,sBAC9BD,EAAMmD,QAAQC,KAAK,WAnEb,uCAwENC,EAAW,GAxEL,UAyENvC,EAAMK,KAAKoB,SAAQ,SAACH,GACxB,IAAIE,EAAQ,2BACPF,GADO,IAEVR,OAAQ,SAEVyB,EAASD,KAAT,eAAmBd,OA9ET,eAiFRO,EAjFQ,2BAkFP/B,GAlFO,IAmFVK,KAAK,GAAD,OAAMkC,KAnFA,UAsFN5B,kBAAQ,QAAS,OAAV,eAAuBoB,IAAanB,MAAK,WACpDD,kBAAQ,SAAD,OACIV,KAAKC,MAAMC,aAAaC,QAAQ,UAAU6B,IACnD,SACA,MACArB,MAAK,WACLT,aAAa+B,WAAW,cACxB/B,aAAa+B,WAAW,SACxBC,IAAoBC,QAAQjD,EAAE,sBAC9BD,EAAMmD,QAAQC,KAAK,WA/FX,qCAoGVjC,EAAKc,OAAS,GApGJ,oBAqGNC,EAAWf,EAAKgB,QAAO,SAACC,GAAD,OAAUA,EAAKC,SAAWvB,EAAMuB,UACvDC,EAAWxB,EAAMK,OAEnBe,EAASD,OAAS,GAxGV,kCAyGJK,EAASC,SAAQ,SAACH,GACtB,IAAII,EAAQN,EAAS,GAAGf,KAAKsB,WAC3B,SAACC,GAAD,OAAeA,EAAUC,OAASP,EAAKO,QAGzC,IAAe,IAAXH,EACFN,EAAS,GAAGf,KAAKqB,GAAjB,2BACKN,EAAS,GAAGf,KAAKqB,IADtB,IAEEI,SAAUV,EAAS,GAAGf,KAAKqB,GAAOI,SAAWR,EAAKQ,eAE/C,CACL,IAAIC,EAAS,2BACRT,GADQ,IAEXR,OAAQ,SAGVM,EAAS,GAAGf,KAAK2B,QAAjB,eAA8BD,QAzHxB,QA4HVpB,kBAAQ,SAAD,OAAUS,EAAS,GAAGa,IAAM,MAA5B,eAAwCb,EAAS,KAAMR,MAC5D,WACET,aAAaqC,QACbL,IAAoBC,QAAQjD,EAAE,sBAC9BD,EAAMmD,QAAQC,KAAK,KACnB/B,EAASkC,qBAAW,QAjId,+BAqIJF,EAAW,GArIP,UAsIJvC,EAAMK,KAAKoB,SAAQ,SAACH,GACxB,IAAIE,EAAQ,2BACPF,GADO,IAEVR,OAAQ,SAEVyB,EAASD,KAAT,eAAmBd,OA3IX,QA8INO,EA9IM,2BA+IL/B,GA/IK,IAgJRK,KAAK,GAAD,OAAMkC,KAGZ5B,kBAAQ,QAAS,OAAV,eAAuBoB,IAAanB,MAAK,SAACC,GAC/CV,aAAaqC,QACbL,IAAoBC,QAAQjD,EAAE,sBAC9BD,EAAMmD,QAAQC,KAAK,KACnB/B,EAASkC,qBAAW,QAvJZ,uCA2JNF,EAAW,GA3JL,UA4JNvC,EAAMK,KAAKoB,SAAQ,SAACH,GACxB,IAAIE,EAAQ,2BACPF,GADO,IAEVR,OAAQ,SAEVyB,EAASD,KAAT,eAAmBd,OAjKT,QAoKRO,EApKQ,2BAqKP/B,GArKO,IAsKVK,KAAK,GAAD,OAAMkC,KAGZ5B,kBAAQ,QAAS,OAAV,eAAuBoB,IAAanB,MAAK,SAACC,GAC/CV,aAAaqC,QACbL,IAAoBC,QAClB,kBACAjD,EAAE,sBAEJD,EAAMmD,QAAQC,KAAK,KACnB/B,EAASkC,qBAAW,QAhLV,4CAAH,sDAsLf,OACE,8BACqC,OAAlCtC,aAAaC,QAAQ,SACpB,yBACEsC,UAAU,MACVC,MAAO,CACLC,OAAQ,YACRC,QAAS,OACTC,WAAY,SACZC,MAAO,MACPC,OAAQ,UAGV,kBAAC,IAAD,CACE1D,IAAKA,EACLE,OAAQA,EACRyD,QAASvD,EACTE,KAAMA,EACNE,OAAQA,IAEV,0BAAM4C,UAAU,cAAcQ,SAAU,SAACjC,GAAD,OAAOD,EAAUC,KACvD,2BACEkC,KAAK,MACLvD,KAAK,SACLwD,YAAY,cACZC,MAAOvD,EACPwD,SAAU,SAACrC,GAAD,OAAOlB,EAAUkB,EAAEsC,OAAOF,QACpCG,QAAS,SAACvC,GAAD,OAAOtB,EAASsB,EAAEsC,OAAO3D,SAEpC,2BACEuD,KAAK,OACLvD,KAAK,OACLwD,YAAY,OACZC,MAAOzD,EACP0D,SAAU,SAACrC,GAAD,OAAOpB,EAAQoB,EAAEsC,OAAOF,QAClCG,QAAS,SAACvC,GAAD,OAAOtB,EAASsB,EAAEsC,OAAO3D,SAEpC,2BACEuD,KAAK,OACLvD,KAAK,SACLwD,YAAY,eACZC,MAAO7D,EACP8D,SAAU,SAACrC,GAAD,OAAOxB,EAAUwB,EAAEsC,OAAOF,QACpCG,QAAS,SAACvC,GAAD,OAAOtB,EAASsB,EAAEsC,OAAO3D,SAEpC,2BACEuD,KAAK,MACLvD,KAAK,MACLwD,YAAY,MACZC,MAAO/D,EACPgE,SAAU,SAACrC,GAAD,OAAO1B,EAAO0B,EAAEsC,OAAOF,QACjCG,QAAS,SAACvC,GAAD,OAAOtB,EAASsB,EAAEsC,OAAO3D,SAEpC,4BAAQ8C,UAAU,YAAlB,SAIJ,yBACEA,UAAU,MACVC,MAAO,CACLK,OAAQ,QACRD,MAAO,OACPF,QAAS,OACTY,cAAe,SACfC,eAAgB,SAChBZ,WAAY,WAGd,4BAAK3D,EAAE,iBACP,kBAAC,IAAD,CAAMuD,UAAU,MAAMiB,GAAG,SACtBxE,EAAE","file":"static/js/124.9bdfeba7.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Cards from \"react-credit-cards\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport NotificationManager from \"react-notifications/lib/NotificationManager\";\r\nimport { Link } from \"react-router-dom\";\r\nimport callApi from \"../../../common/callApi\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { actAddCart } from \"../../../actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst CreditCard = (props) => {\r\n  const { t } = useTranslation(\"translation\");\r\n  const [cvc, setCvc] = useState(\"1234\");\r\n  const [expiry, setExpiry] = useState(\"04/28\");\r\n  const [focus, setFocus] = useState(\"\");\r\n  const [name, setName] = useState(\"NGUYEN ANH VU\");\r\n  const [number, setNumber] = useState(\"4231412342345234\");\r\n  const order = JSON.parse(localStorage.getItem(\"order\")) || {};\r\n  const [data, setData] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"order\") !== null) {\r\n      const fetchData = async () => {\r\n        await callApi(`order`, \"get\", null).then((res) => {\r\n          if (res && res.status === 200 && res.data) {\r\n            setData([...res.data]);\r\n          } else setData([]);\r\n        });\r\n      };\r\n\r\n      fetchData();\r\n    }\r\n  }, []);\r\n\r\n  const handlePay = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (localStorage.getItem(\"Token\") !== null) {\r\n      if (data.length > 0) {\r\n        const arrOrder = data.filter((item) => item.userId === order.userId);\r\n        const newOrder = order.data;\r\n\r\n        if (arrOrder.length > 0) {\r\n          await newOrder.forEach((item) => {\r\n            let index = arrOrder[0].data.findIndex(\r\n              (itemOrder) => itemOrder.code === item.code\r\n            );\r\n\r\n            if (index !== -1) {\r\n              arrOrder[0].data[index] = {\r\n                ...arrOrder[0].data[index],\r\n                quantity: arrOrder[0].data[index].quantity + item.quantity,\r\n              };\r\n            } else {\r\n              let dataOrder = {\r\n                ...item,\r\n                status: \"paid\",\r\n              };\r\n\r\n              arrOrder[0].data.unshift({ ...dataOrder });\r\n            }\r\n          });\r\n\r\n          callApi(`order/${arrOrder[0].id}`, \"put\", { ...arrOrder[0] }).then(\r\n            () => {\r\n              callApi(\r\n                `carts/${JSON.parse(localStorage.getItem(\"Token\")).id}`,\r\n                \"delete\",\r\n                null\r\n              ).then((res) => {\r\n                localStorage.removeItem(\"idCustomer\");\r\n                localStorage.removeItem(\"order\");\r\n                NotificationManager.success(t(\"pay-success.title\"));\r\n                props.history.push(\"/\");\r\n              });\r\n            }\r\n          );\r\n        } else {\r\n          const products = [];\r\n          await order.data.forEach((item) => {\r\n            let newOrder = {\r\n              ...item,\r\n              status: \"paid\",\r\n            };\r\n            products.push({ ...newOrder });\r\n          });\r\n\r\n          let dataOrder = {\r\n            ...order,\r\n            data: [...products],\r\n          };\r\n\r\n          callApi(`order`, \"post\", { ...dataOrder }).then(() => {\r\n            callApi(\r\n              `carts/${JSON.parse(localStorage.getItem(\"Token\")).id}`,\r\n              \"delete\",\r\n              null\r\n            ).then(() => {\r\n              localStorage.removeItem(\"idCustomer\");\r\n              localStorage.removeItem(\"order\");\r\n              NotificationManager.success(t(\"pay-success.title\"));\r\n              props.history.push(\"/\");\r\n            });\r\n          });\r\n        }\r\n      } else {\r\n        const products = [];\r\n        await order.data.forEach((item) => {\r\n          let newOrder = {\r\n            ...item,\r\n            status: \"paid\",\r\n          };\r\n          products.push({ ...newOrder });\r\n        });\r\n\r\n        let dataOrder = {\r\n          ...order,\r\n          data: [...products],\r\n        };\r\n\r\n        await callApi(`order`, \"post\", { ...dataOrder }).then(() => {\r\n          callApi(\r\n            `carts/${JSON.parse(localStorage.getItem(\"Token\")).id}`,\r\n            \"delete\",\r\n            null\r\n          ).then(() => {\r\n            localStorage.removeItem(\"idCustomer\");\r\n            localStorage.removeItem(\"order\");\r\n            NotificationManager.success(t(\"pay-success.title\"));\r\n            props.history.push(\"/\");\r\n          });\r\n        });\r\n      }\r\n    } else {\r\n      if (data.length > 0) {\r\n        const arrOrder = data.filter((item) => item.userId === order.userId);\r\n        const newOrder = order.data;\r\n\r\n        if (arrOrder.length > 0) {\r\n          await newOrder.forEach((item) => {\r\n            let index = arrOrder[0].data.findIndex(\r\n              (itemOrder) => itemOrder.code === item.code\r\n            );\r\n\r\n            if (index !== -1) {\r\n              arrOrder[0].data[index] = {\r\n                ...arrOrder[0].data[index],\r\n                quantity: arrOrder[0].data[index].quantity + item.quantity,\r\n              };\r\n            } else {\r\n              let dataOrder = {\r\n                ...item,\r\n                status: \"paid\",\r\n              };\r\n\r\n              arrOrder[0].data.unshift({ ...dataOrder });\r\n            }\r\n          });\r\n          callApi(`order/${arrOrder[0].id}`, \"put\", { ...arrOrder[0] }).then(\r\n            () => {\r\n              localStorage.clear();\r\n              NotificationManager.success(t(\"pay-success.title\"));\r\n              props.history.push(\"/\");\r\n              dispatch(actAddCart([]));\r\n            }\r\n          );\r\n        } else {\r\n          const products = [];\r\n          await order.data.forEach((item) => {\r\n            let newOrder = {\r\n              ...item,\r\n              status: \"paid\",\r\n            };\r\n            products.push({ ...newOrder });\r\n          });\r\n\r\n          let dataOrder = {\r\n            ...order,\r\n            data: [...products],\r\n          };\r\n\r\n          callApi(`order`, \"post\", { ...dataOrder }).then((res) => {\r\n            localStorage.clear();\r\n            NotificationManager.success(t(\"pay-success.title\"));\r\n            props.history.push(\"/\");\r\n            dispatch(actAddCart([]));\r\n          });\r\n        }\r\n      } else {\r\n        const products = [];\r\n        await order.data.forEach((item) => {\r\n          let newOrder = {\r\n            ...item,\r\n            status: \"paid\",\r\n          };\r\n          products.push({ ...newOrder });\r\n        });\r\n\r\n        let dataOrder = {\r\n          ...order,\r\n          data: [...products],\r\n        };\r\n\r\n        callApi(`order`, \"post\", { ...dataOrder }).then((res) => {\r\n          localStorage.clear();\r\n          NotificationManager.success(\r\n            \"Success message\",\r\n            t(\"pay-success.title\")\r\n          );\r\n          props.history.push(\"/\");\r\n          dispatch(actAddCart([]));\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      {localStorage.getItem(\"order\") !== null ? (\r\n        <div\r\n          className=\"box\"\r\n          style={{\r\n            margin: \"50px auto\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            width: \"50%\",\r\n            height: \"470px\",\r\n          }}\r\n        >\r\n          <Cards\r\n            cvc={cvc}\r\n            expiry={expiry}\r\n            focused={focus}\r\n            name={name}\r\n            number={number}\r\n          />\r\n          <form className=\"card-credit\" onSubmit={(e) => handlePay(e)}>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              placeholder=\"Card Number\"\r\n              value={number}\r\n              onChange={(e) => setNumber(e.target.value)}\r\n              onFocus={(e) => setFocus(e.target.name)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              onFocus={(e) => setFocus(e.target.name)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"expiry\"\r\n              placeholder=\"MM/YY Expiry\"\r\n              value={expiry}\r\n              onChange={(e) => setExpiry(e.target.value)}\r\n              onFocus={(e) => setFocus(e.target.name)}\r\n            />\r\n            <input\r\n              type=\"tel\"\r\n              name=\"cvc\"\r\n              placeholder=\"CVC\"\r\n              value={cvc}\r\n              onChange={(e) => setCvc(e.target.value)}\r\n              onFocus={(e) => setFocus(e.target.name)}\r\n            />\r\n            <button className=\"myButton\">Pay</button>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className=\"box\"\r\n          style={{\r\n            height: \"500px\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <h4>{t(\"nothing-info\")}</h4>\r\n          <Link className=\"buy\" to=\"/cart\">\r\n            {t(\"cart-now\")}\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default withRouter(CreditCard);\r\n"],"sourceRoot":""}