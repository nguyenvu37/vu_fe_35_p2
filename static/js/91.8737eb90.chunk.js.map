{"version":3,"sources":["pages/user-page/recover/recover.js","common/constCommon.js","common/validate.js","common/FormError.js"],"names":["withRouter","props","t","useTranslation","loggedIn","useSelector","state","users","useState","isNoneForm","setIsNoneForm","inputEmail","useRef","inputPassword","inputConfirmPass","dispatch","useDispatch","email","errorMessage","password","confirmPass","stateInput","setStateInput","handleInputValidate","e","name","target","validateInput","getValueInput","current","value","newState","handleSubmit","a","preventDefault","NotificationManager","warning","callApi","then","res","status","data","length","success","handleRecoverPass","role","id","localStorage","setItem","JSON","stringify","actLogin","history","push","error","getItem","className","style","width","marginBottom","height","textShadow","display","justifyContent","alignItems","type","ref","onKeyUp","disabled","marginTop","boxShadow","marginRight","onClick","firstname","lastname","phone","fullname","address","checkingText","pass","i18next","exec","passConfirm","getTranslationCategory","category","FormError"],"mappings":"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","file":"static/js/91.8737eb90.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport NotificationManager from \"react-notifications/lib/NotificationManager\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actLogin } from \"../../../actions/actions\";\r\nimport callApi from \"../../../common/callApi\";\r\nimport FormError from \"../../../common/FormError\";\r\nimport { getValueInput, validateInput } from \"../../../common/validate\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Recover = (props) => {\r\n  const { t } = useTranslation(\"translation\");\r\n  const loggedIn = useSelector((state) => state.users.loggedIn);\r\n  const [isNoneForm, setIsNoneForm] = useState(\"none\");\r\n  const inputEmail = useRef();\r\n  const inputPassword = useRef();\r\n  const inputConfirmPass = useRef();\r\n  const dispatch = useDispatch();\r\n  const [stateInput, setStateInput] = useState({\r\n    email: {\r\n      errorMessage: \"\",\r\n    },\r\n    password: {\r\n      errorMessage: \"\",\r\n    },\r\n    confirmPass: {\r\n      errorMessage: \"\",\r\n    },\r\n  });\r\n\r\n  const handleInputValidate = (e) => {\r\n    const { name } = e.target;\r\n    const { errorMessage } = validateInput(\r\n      name,\r\n      getValueInput(\r\n        name,\r\n        inputEmail,\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        inputPassword,\r\n        inputConfirmPass\r\n      ),\r\n      inputPassword.current.value\r\n    );\r\n    const newState = { ...stateInput[name] };\r\n    newState.errorMessage = errorMessage;\r\n    setStateInput({ ...stateInput, [name]: newState });\r\n  };\r\n\r\n  const handleValidationSubmit = () => {\r\n    if (\r\n      stateInput.password.errorMessage !== \"\" ||\r\n      stateInput.email.errorMessage !== \"\"\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (await !handleValidationSubmit()) {\r\n      return NotificationManager.warning(t(\"login.format\"));\r\n    } else {\r\n      await callApi(\r\n        `users?email=${inputEmail.current.value}`,\r\n        \"get\",\r\n        null\r\n      ).then((res) => {\r\n        if (res && res.status === 200 && res.data) {\r\n          if (res.data.length > 0) {\r\n            NotificationManager.success(t(\"recover.success1\"));\r\n            setIsNoneForm(\"flex\");\r\n          } else {\r\n            setIsNoneForm(\"none\");\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRecoverPass = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      inputPassword.current.value === \"\" ||\r\n      inputConfirmPass.current.value === \"\"\r\n    ) {\r\n      NotificationManager.warning(t(\"login.format\"));\r\n      return false;\r\n    } else {\r\n      await callApi(\r\n        `users?email=${inputEmail.current.value}`,\r\n        \"get\",\r\n        null\r\n      ).then((res) => {\r\n        if (\r\n          res.data[0] &&\r\n          res.data[0].email === inputEmail.current.value &&\r\n          res.data[0].role === \"menber\"\r\n        ) {\r\n          let data = {\r\n            ...res.data[0],\r\n            password: inputPassword.current.value,\r\n          };\r\n          callApi(`users/${res.data[0].id}`, \"put\", { ...data }).then(() => {\r\n            localStorage.setItem(\r\n              \"Token\",\r\n              JSON.stringify({\r\n                ...res.data[0],\r\n                password: \"******\",\r\n                role: \"***\",\r\n              })\r\n            );\r\n            NotificationManager.success(t(\"recover.success2\"));\r\n            dispatch(actLogin());\r\n            props.history.push(\"/\");\r\n          });\r\n        } else {\r\n          NotificationManager.error(t(\"login.err\"));\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  if (loggedIn || localStorage.getItem(\"Token\") !== null) {\r\n    props.history.push(\"/\");\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"box\">\r\n        <div\r\n          className=\"recover\"\r\n          style={{ width: \"100%\", marginBottom: \"50px\", height: \"530px\" }}\r\n        >\r\n          <div className=\"title-content\">\r\n            <h1 style={{ textShadow: \"-2px 2px 2px rgba(229,229,229,0.74)\" }}>\r\n              {t(\"recover.title\")}\r\n            </h1>\r\n          </div>\r\n          <div\r\n            className=\"form\"\r\n            style={{\r\n              height: \"400px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <form style={{ width: \"80%\" }}>\r\n              <div className=\"form-group\">\r\n                <label>{t(\"recover.email\")}</label>\r\n                {isNoneForm === \"flex\" ? (\r\n                  <input\r\n                    type=\"email\"\r\n                    ref={inputEmail}\r\n                    name=\"email\"\r\n                    onKeyUp={handleInputValidate}\r\n                    disabled\r\n                  />\r\n                ) : (\r\n                  <input\r\n                    type=\"email\"\r\n                    ref={inputEmail}\r\n                    name=\"email\"\r\n                    onKeyUp={handleInputValidate}\r\n                  />\r\n                )}\r\n                <FormError errorMessage={stateInput.email.errorMessage} />\r\n              </div>\r\n              <div className={`form-group ${isNoneForm}`}>\r\n                <label>{t(\"recover.pass\")}</label>\r\n                <input\r\n                  type=\"password\"\r\n                  ref={inputPassword}\r\n                  name=\"password\"\r\n                  onKeyUp={handleInputValidate}\r\n                />\r\n                <FormError errorMessage={stateInput.password.errorMessage} />\r\n              </div>\r\n              <div className={`form-group ${isNoneForm}`}>\r\n                <label>{t(\"register.confirm\")}</label>\r\n                <input\r\n                  type=\"password\"\r\n                  ref={inputConfirmPass}\r\n                  name=\"confirmPass\"\r\n                  onKeyUp={handleInputValidate}\r\n                />\r\n                <FormError errorMessage={stateInput.confirmPass.errorMessage} />\r\n              </div>\r\n              <div className=\"btn-form\" style={{ marginTop: \"30px\" }}>\r\n                {isNoneForm === \"none\" ? (\r\n                  <button\r\n                    type=\"submit\"\r\n                    style={{\r\n                      boxShadow: \"3px 4px 5px 0px rgba(0,0,0,0.75)\",\r\n                      marginRight: \"20px\",\r\n                    }}\r\n                    onClick={(e) => handleSubmit(e)}\r\n                  >\r\n                    {t(\"recover.btn-check\")}\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    type=\"submit\"\r\n                    style={{ boxShadow: \"3px 4px 5px 0px rgba(0,0,0,0.75)\" }}\r\n                    onClick={(e) => handleRecoverPass(e)}\r\n                  >\r\n                    {t(\"recover.btn-send\")}\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default withRouter(Recover);\r\n","export const email = /\\S+@\\S+\\.\\S+/;\r\nexport const firstname = /^[a-zA-Z]+$/;\r\nexport const lastname = /^[a-zA-Z]+$/;\r\nexport const phone = /^\\d{10}$/;\r\nexport const password = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$/;\r\nexport const fullname = /^[a-zA-Z ]+$/;\r\nexport const address = /^[a-zA-Z0-9\\s,-]*$/;\r\n","import i18next from \"i18next\";\r\nimport {\r\n  address,\r\n  email,\r\n  firstname,\r\n  fullname,\r\n  lastname,\r\n  password,\r\n  phone,\r\n} from \"./constCommon\";\r\n\r\nexport const validateInput = (type, checkingText, pass) => {\r\n  if (checkingText === \"\") {\r\n    return { errorMessage: i18next.t(\"validate.require\") };\r\n  }\r\n\r\n  if (type === \"email\") {\r\n    const regexp = email;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.email\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"firstname\") {\r\n    const regexp = firstname;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.firstname\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"lastname\") {\r\n    const regexp = lastname;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.lastname\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"phone\") {\r\n    const regexp = phone;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.phone\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"password\") {\r\n    const regexp = password;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.password\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"confirmPass\") {\r\n    const regexPass = pass;\r\n    if (checkingText === regexPass) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.confirm\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"fullname\") {\r\n    const regexp = fullname;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.fullname\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"address\") {\r\n    const regexp = address;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.address\"),\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport const getValueInput = (\r\n  name,\r\n  email,\r\n  firstname,\r\n  lastname,\r\n  phone,\r\n  pass,\r\n  passConfirm,\r\n  fullname,\r\n  address\r\n) => {\r\n  switch (name) {\r\n    case \"email\":\r\n      return email.current.value;\r\n    case \"firstname\":\r\n      return firstname.current.value;\r\n    case \"lastname\":\r\n      return lastname.current.value;\r\n    case \"phone\":\r\n      return phone.current.value;\r\n    case \"password\":\r\n      return pass.current.value;\r\n    case \"confirmPass\":\r\n      return passConfirm.current.value;\r\n    case \"fullname\":\r\n      return fullname.current.value;\r\n    case \"address\":\r\n      return address.current.value;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const getTranslationCategory = (category) => {\r\n  switch (category) {\r\n    case \"cosmetic\":\r\n      return i18next.t(\"grid.category1\");\r\n    case \"makeup\":\r\n      return i18next.t(\"grid.category2\");\r\n    case \"perfume\":\r\n      return i18next.t(\"grid.category3\");\r\n    case \"lotions\":\r\n      return i18next.t(\"grid.menu1_1\");\r\n    case \"mask\":\r\n      return i18next.t(\"grid.menu1_2\");\r\n    case \"cleanser\":\r\n      return i18next.t(\"grid.menu1_3\");\r\n    case \"lipstick\":\r\n      return i18next.t(\"grid.menu2_1\");\r\n    case \"mascara\":\r\n      return i18next.t(\"grid.menu2_2\");\r\n    case \"blusher\":\r\n      return i18next.t(\"grid.menu2_3\");\r\n    default:\r\n      return category;\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nconst FormError = (props) => {\r\n  return (\r\n    <div className=\"text-left text-danger font-italic\">\r\n      {props.errorMessage}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormError;\r\n"],"sourceRoot":""}